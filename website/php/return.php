<?php


// // Парраметрическая функция
// // function sum ($a,$b) - то, что внутри скобок - параметры. 
// // передавать параметры в функцию
// // function sum ($a,$b) - говорим, что будем работать с двумя переменными, которые будем передовать в функцию.
// // echo 4+6 - получать рузультат сумирования 2ух чисел

// function sum($a,$b) { 
//   echo $a+$b;
// }

// sum(4,9);


// // С глобальными переменными
// echo '<br>';
// echo '<br>';
// function sum1(){
//   global $a, $b;
//   echo $a+$b;
// }

// sum1();
// echo '<br>';
// $a = 666;
// $b = 777;
// sum1();


// // В функцию передаются параметры в зависимости от параметра ".....S3 - '*'или'+'" -  
// echo '<br>';
// function sum2($a,$b,$s){
//   if ($s == '*') {
//     echo $a * $b;
//   }
//   else {
//     echo $a + $b;
//   }
// }

// sum2( 4, 9,'*');
// echo '<br>';
// sum2(4, 9, '+');




// // В функцию передаются параметры в зависиости от указанного параметра "....$s = '+'" -  
// echo '<br>';
// function sum3($a, $b, $s = '+'){
//   if ($s == '*') {
//     echo $a * $b;
//   } 
 
//   elseif ($s == '+') {
//     echo $a + $b;
//   } 
 
//   elseif ($s == '-') {
//     echo $a - $b;
//   } 
 
//  elseif ($s == '/') {
//     echo $a / $b;
//   } 

// }

// sum3(99, 9, '*');
// echo '<br>';







// Параметры.Не обязательно использовать параметры. Параметры нужны, чтобы сделать функцию многогранее. Если вам нужно просто сгрупировать код для удобства - просто группируйте без парраметров и без "return".
// Таким образом мы можем использовать функции не только как группировку кода, а как периметрически вызываемую сущность. Параметры задаются внутри () "function sum($a, $b, $s = '-'){".
// Когда вызываем функцию "sum(99,   9,   '+');" и передаёте её либо числа, либо переменные - эти числа/переменные подставляются в качестве передаваемых значений "function sum($a, $b, $s = '+'){"  
// Например: переменная "a" примет значение - 99, "b" примет значение - 9, $s примет значение - "+".
// Если не будет передан знак $s, то знак примет значение по умолчанию - "-", как было задано в функции - $s = '-'.



// echo '<br>';
// function sum($a, $b, $s = '-'){
//   if ($s == '*') {
//     echo $a * $b;
//   } 
//   elseif ($s == '+') {
//     echo $a + $b;
//   } 
//   elseif ($s == '-') {
//     echo $a - $b;
//   } 
//   elseif ($s == '/') {
//     echo $a / $b;
//   }
// }


// sum(99,   9,   '+');



// function sum2($a,$b){
//   return $a+$b;
// }
// echo '<br>';

// $c = 100 + sum2(90, 9);
// echo $c;





// Параметры. 
// Таким образом мы можем использовать функции не только как группировку кода, а как периметрически вызываемую сущность. Параметры задаются внутри () "function sum($a, $b, $s = '*'){".
// Когда вызываем функцию "sum2(99,   9,   '-');" и передаёте её либо числа, либо переменные - эти числа/переменные подставляются в качестве передаваемых значений "function sum($a, $b, $s = '*'){"  
// Например: переменная "a" примет значение - 99, "b" примет значение - 9, $s примет значение - "-".
// Если не будет передан знак $s, то знак примет значение по умолчанию - "*", как было задано в функции - $s = '*'.

// Математические выражения.Очень удобно использовать функцию в каких-либо математических выражениях.Когда необходимо чтобы функция в место себя подставила что-либо. Тогда вы должны использовать ключевое слово "return". Если функция при выполнение натыкается на "return", то она выводит значение после "return" и останавливается. Например: вместо "return" выведен результат работы  "sum2(90, 9,'-')";
// return - ключевое слово, которое говорит о том, что функция должна подставить вместо себя, если она будет вызвана математическим выражением ($c = 777 + sum2(99, 9, '*'))."return" нужен для того, чтобы использовать функцию в выражениях. 
//  математическое выражени $c = 777 + sum2(99, 9, '-' - если я внутри него вызову функцию, то функция после того как исполнится вместо себя подставит то, что написано после return

// Если переменные записаны вне тела функции, то они распостраняются на все функции проекта. 

// матиматическое выражение $c принимает значение 100 + переменная sum2 (заданная функцией sum2)



function sum2($a, $b, $s = '*') {
  if ($s == '*') {
    return $a * $b;
  } elseif ($s == '+') {
    return $a + $b;
  } elseif ($s == '-') {
    return $a - $b;
  } elseif ($s == '/') {
    return $a / $b;
  }
}

echo '<br>';
$c = 100 + sum2(90, 9,'-');
echo $c;
echo '<hr>';
echo sum2(90, 9,'*');
echo '<br>';
echo '<hr>';
echo sum2(90, 9, '+');
echo '<br>';
echo '<hr>';
echo sum2(90, 9, '/');
echo '<br>';